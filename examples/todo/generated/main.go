// Code generated by ease; DO NOT EDIT
package main

import (
	context_ea7792 "context"
	todo_ca7678 "github.com/YuukanOO/ease/todo"
	"github.com/gin-gonic/gin"
	"strconv"
)

type server struct {
	router             *gin.Engine
	TodoService_9abf69 *todo_ca7678.TodoService
}

func main() {
	s := &server{
		router: gin.Default(),
	}
	s.router.POST("/api/todos", s.Create_9e7e22)
	s.router.GET("/api/todos", s.List_765091)
	s.router.PUT("/api/todos/:id", s.Update_0cdc62)
	s.router.GET("/api/_health", s.HealthCheck_06868b)
	s.router.GET("/api/without-params", s.WithoutParams_5fd7e9)

	s.router.Run()
}

func (s *server) Create_9e7e22(c *gin.Context) {
	var ctx context_ea7792.Context = c.Request.Context()
	var cmd todo_ca7678.TodoCreateCommand
	ginResult, err := s.TodoService_9abf69.Create(
		ctx,
		&cmd,
	)
	if err != nil {
		handleError(c, err)
		return
	}
	c.JSON(200, ginResult)
}

func (s *server) List_765091(c *gin.Context) {
	var ctx context_ea7792.Context = c.Request.Context()
	ginResult, err := s.TodoService_9abf69.List(
		ctx,
	)
	if err != nil {
		handleError(c, err)
		return
	}
	c.JSON(200, ginResult)
}

func (s *server) Update_0cdc62(c *gin.Context) {
	var ctx context_ea7792.Context = c.Request.Context()
	var id uint = paramToInt[uint](c, "id")
	var cmd todo_ca7678.TodoUpdateCommand
	ginResult, err := s.TodoService_9abf69.Update(
		ctx,
		id,
		cmd,
	)
	if err != nil {
		handleError(c, err)
		return
	}
	c.JSON(200, ginResult)
}

func (s *server) HealthCheck_06868b(c *gin.Context) {
	var ctx context_ea7792.Context = c.Request.Context()
	ginResult := todo_ca7678.HealthCheck(
		ctx,
	)
	c.JSON(200, ginResult)
}

func (s *server) WithoutParams_5fd7e9(c *gin.Context) {
	s.TodoService_9abf69.WithoutParams()
}

func paramToInt[T int | uint](c *gin.Context, name string) T {
	value, _ := strconv.Atoi(c.Param(name))
	return T(value)
}

type HttpError interface {
	error
	Status() int
}

func handleError(c *gin.Context, err error) {
	c.Error(err)

	httpErr, implementHttpErr := err.(HttpError)

	if !implementHttpErr {
		c.JSON(500, err)
		return
	}

	c.JSON(httpErr.Status(), err)
}
